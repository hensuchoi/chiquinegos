rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*')
        && request.resource.size < 5 * 1024 * 1024; // 5MB max
    }

    // Business images
    match /businesses/{businessId}/{imageId} {
      allow read: if true;
      allow create: if isAuthenticated() 
        && isValidImage();
      allow update: if isAuthenticated() 
        && isValidImage();
      allow delete: if isAuthenticated();
    }

    // User profile images
    match /users/{userId}/{imageId} {
      allow read: if true;
      allow write: if isAuthenticated() 
        && request.auth.uid == userId
        && isValidImage();
    }
  }
} 